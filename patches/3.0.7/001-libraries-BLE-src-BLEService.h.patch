# ESP32 Hub Patch for libraries/BLE/src/BLEService.h
# Generated: 2024-12-14 10:47:47.058233
# Purpose: Fix BLE memory leaks.
#
--- original/arduino-esp32-3.0.7/libraries/BLE/src/BLEService.h	2024-12-14 10:40:05
+++ modified/libraries/BLE/src/BLEService.h	2024-12-13 19:03:11
@@ -25,7 +25,8 @@
 /**
  * @brief A data mapping used to manage the set of %BLE characteristics known to the server.
  */
-class BLECharacteristicMap {
+class BLECharacteristicMap
+{
 public:
   void setByUUID(BLECharacteristic *pCharacteristic, const char *uuid);
   void setByUUID(BLECharacteristic *pCharacteristic, BLEUUID uuid);
@@ -48,7 +49,8 @@
  * @brief The model of a %BLE service.
  *
  */
-class BLEService {
+class BLEService
+{
 public:
   void addCharacteristic(BLECharacteristic *pCharacteristic);
   BLECharacteristic *createCharacteristic(const char *uuid, uint32_t properties);
@@ -66,6 +68,19 @@
   uint16_t getHandle();
   uint8_t m_instId = 0;
 
+  ~BLEService()
+  {
+    // Clean up characteristics using the existing interface
+    BLECharacteristic *pChar = m_characteristicMap.getFirst();
+    while (pChar != nullptr)
+    {
+      BLECharacteristic *current = pChar;
+      pChar = m_characteristicMap.getNext();
+      delete current;
+    }
+    // The map will be cleaned up automatically when the service is deleted
+  }
+
 private:
   BLEService(const char *uuid, uint16_t numHandles);
   BLEService(BLEUUID uuid, uint16_t numHandles);
@@ -91,8 +106,8 @@
   BLECharacteristic *getLastCreatedCharacteristic();
   void handleGATTServerEvent(esp_gatts_cb_event_t event, esp_gatt_if_t gatts_if, esp_ble_gatts_cb_param_t *param);
   void setHandle(uint16_t handle);
-  //void               setService(esp_gatt_srvc_id_t srvc_id);
-};  // BLEService
+  // void               setService(esp_gatt_srvc_id_t srvc_id);
+}; // BLEService
 
 #endif /* CONFIG_BLUEDROID_ENABLED */
 #endif /* SOC_BLE_SUPPORTED */
