# ESP32 Hub Patch for libraries/BLE/src/BLE2902.cpp
# Generated: 2024-12-14 10:47:47.109654
# Purpose: Fix BLE memory leaks.
#
--- original/arduino-esp32-3.0.7/libraries/BLE/src/BLE2902.cpp	2024-12-14 10:40:05
+++ modified/libraries/BLE/src/BLE2902.cpp	2024-12-13 19:03:11
@@ -17,54 +17,65 @@
 
 #include "BLE2902.h"
 
-BLE2902::BLE2902() : BLEDescriptor(BLEUUID((uint16_t)0x2902)) {
+BLE2902::BLE2902() : BLEDescriptor(BLEUUID((uint16_t)0x2902))
+{
   uint8_t data[2] = {0, 0};
   setValue(data, 2);
-}  // BLE2902
+} // BLE2902
 
 /**
  * @brief Get the notifications value.
  * @return The notifications value.  True if notifications are enabled and false if not.
  */
-bool BLE2902::getNotifications() {
+bool BLE2902::getNotifications()
+{
   return (getValue()[0] & (1 << 0)) != 0;
-}  // getNotifications
+} // getNotifications
 
 /**
  * @brief Get the indications value.
  * @return The indications value.  True if indications are enabled and false if not.
  */
-bool BLE2902::getIndications() {
+bool BLE2902::getIndications()
+{
   return (getValue()[0] & (1 << 1)) != 0;
-}  // getIndications
+} // getIndications
 
 /**
  * @brief Set the indications flag.
  * @param [in] flag The indications flag.
  */
-void BLE2902::setIndications(bool flag) {
+void BLE2902::setIndications(bool flag)
+{
   uint8_t *pValue = getValue();
-  if (flag) {
+  if (flag)
+  {
     pValue[0] |= 1 << 1;
-  } else {
+  }
+  else
+  {
     pValue[0] &= ~(1 << 1);
   }
   setValue(pValue, 2);
-}  // setIndications
+} // setIndications
 
 /**
  * @brief Set the notifications flag.
  * @param [in] flag The notifications flag.
  */
-void BLE2902::setNotifications(bool flag) {
+void BLE2902::setNotifications(bool flag)
+{
   uint8_t *pValue = getValue();
-  if (flag) {
+  if (flag)
+  {
     pValue[0] |= 1 << 0;
-  } else {
+  }
+  else
+  {
     pValue[0] &= ~(1 << 0);
   }
   setValue(pValue, 2);
-}  // setNotifications
+} // setNotifications
 
 #endif
 #endif /* SOC_BLE_SUPPORTED */
